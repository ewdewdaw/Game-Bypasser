

-- Money Tracker for Roblox - Executor Version
if not game:IsLoaded() then
    game.Loaded:Wait()
end

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")

-- Create main GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MoneyTracker_" .. HttpService:GenerateGUID(false)
ScreenGui.Parent = game:GetService("CoreGui") or LocalPlayer:WaitForChild("PlayerGui")

-- UI visibility state
local uiVisible = {
    moneyCounter = true,
    playerList = true,
    teleportUI = true
}

-- Money on floor counter (now draggable)
local totalMoneyFrame = Instance.new("Frame")
totalMoneyFrame.Size = UDim2.new(0, 200, 0, 50)
totalMoneyFrame.Position = UDim2.new(0.5, -100, 0, 10)
totalMoneyFrame.AnchorPoint = Vector2.new(0.5, 0)
totalMoneyFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
totalMoneyFrame.BorderSizePixel = 0
totalMoneyFrame.ZIndex = 10
totalMoneyFrame.Parent = ScreenGui

local UICorner1 = Instance.new("UICorner")
UICorner1.CornerRadius = UDim.new(0, 8)
UICorner1.Parent = totalMoneyFrame

local moneyLabel = Instance.new("TextLabel")
moneyLabel.Size = UDim2.new(1, 0, 1, 0)
moneyLabel.BackgroundTransparency = 1
moneyLabel.Text = "Money on floor: $0"
moneyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
moneyLabel.Font = Enum.Font.SourceSansBold
moneyLabel.TextSize = 18
moneyLabel.ZIndex = 11
moneyLabel.Parent = totalMoneyFrame

-- Make money counter draggable
local moneyDragging = false
local moneyDragStart, moneyStartPos

moneyLabel.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        moneyDragging = true
        moneyDragStart = input.Position
        moneyStartPos = totalMoneyFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                moneyDragging = false
            end
        end)
    end
end)

moneyLabel.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        moneyDragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == moneyDragInput and moneyDragging then
        local delta = input.Position - moneyDragStart
        totalMoneyFrame.Position = UDim2.new(moneyStartPos.X.Scale, moneyStartPos.X.Offset + delta.X, 
                                          moneyStartPos.Y.Scale, moneyStartPos.Y.Offset + delta.Y)
    end
end)

-- Player list frame
local playerListFrame = Instance.new("Frame")
playerListFrame.Size = UDim2.new(0, 200, 0, 300)
playerListFrame.Position = UDim2.new(0, 10, 0.5, -150)
playerListFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
playerListFrame.BorderSizePixel = 0
playerListFrame.ZIndex = 10
playerListFrame.Parent = ScreenGui

local UICorner2 = Instance.new("UICorner")
UICorner2.CornerRadius = UDim.new(0, 8)
UICorner2.Parent = playerListFrame

local listTitle = Instance.new("TextLabel")
listTitle.Size = UDim2.new(1, 0, 0, 30)
listTitle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
listTitle.BorderSizePixel = 0
listTitle.Text = "Players"
listTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
listTitle.Font = Enum.Font.SourceSansBold
listTitle.TextSize = 18
listTitle.ZIndex = 11
listTitle.Parent = playerListFrame

local UICorner3 = Instance.new("UICorner")
UICorner3.CornerRadius = UDim.new(0, 8)
UICorner3.Parent = listTitle

local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -10, 1, -40)
scrollFrame.Position = UDim2.new(0, 5, 0, 35)
scrollFrame.BackgroundTransparency = 1
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 5
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.ZIndex = 11
scrollFrame.Parent = playerListFrame

local listLayout = Instance.new("UIListLayout")
listLayout.Padding = UDim.new(0, 5)
listLayout.Parent = scrollFrame

-- Teleport UI Frame
local teleportFrame = Instance.new("Frame")
teleportFrame.Size = UDim2.new(0, 150, 0, 350)
teleportFrame.Position = UDim2.new(1, -160, 0.5, -175)
teleportFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
teleportFrame.BorderSizePixel = 0
teleportFrame.ZIndex = 10
teleportFrame.Parent = ScreenGui

local teleportUICorner = Instance.new("UICorner")
teleportUICorner.CornerRadius = UDim.new(0, 8)
teleportUICorner.Parent = teleportFrame

local teleportTitle = Instance.new("TextLabel")
teleportTitle.Size = UDim2.new(1, 0, 0, 30)
teleportTitle.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
teleportTitle.BorderSizePixel = 0
teleportTitle.Text = "MTP Commands"
teleportTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
teleportTitle.Font = Enum.Font.SourceSansBold
teleportTitle.TextSize = 16
teleportTitle.ZIndex = 11
teleportTitle.Parent = teleportFrame

local teleportTitleUICorner = Instance.new("UICorner")
teleportTitleUICorner.CornerRadius = UDim.new(0, 8)
teleportTitleUICorner.Parent = teleportTitle

local teleportScroll = Instance.new("ScrollingFrame")
teleportScroll.Size = UDim2.new(1, -10, 1, -40)
teleportScroll.Position = UDim2.new(0, 5, 0, 35)
teleportScroll.BackgroundTransparency = 1
teleportScroll.BorderSizePixel = 0
teleportScroll.ScrollBarThickness = 5
teleportScroll.CanvasSize = UDim2.new(0, 0, 0, 0)
teleportScroll.ZIndex = 11
teleportScroll.Parent = teleportFrame

local teleportLayout = Instance.new("UIListLayout")
teleportLayout.Padding = UDim.new(0, 5)
teleportLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
teleportLayout.Parent = teleportScroll

-- Control buttons frame (toggle UI) - MODIFIED: Moved to bottom left, made horizontal
local controlFrame = Instance.new("Frame")
controlFrame.Size = UDim2.new(0, 120, 0, 40) -- Wider and shorter for horizontal layout
controlFrame.Position = UDim2.new(0, 10, 1, -50) -- Bottom left corner
controlFrame.AnchorPoint = Vector2.new(0, 1) -- Anchor to bottom
controlFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
controlFrame.BorderSizePixel = 0
controlFrame.ZIndex = 15
controlFrame.Parent = ScreenGui

local controlUICorner = Instance.new("UICorner")
controlUICorner.CornerRadius = UDim.new(0, 8)
controlUICorner.Parent = controlFrame

-- Use horizontal layout instead of vertical
local controlLayout = Instance.new("UIListLayout")
controlLayout.Padding = UDim.new(0, 10)
controlLayout.FillDirection = Enum.FillDirection.Horizontal -- Horizontal layout
controlLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
controlLayout.VerticalAlignment = Enum.VerticalAlignment.Center
controlLayout.Parent = controlFrame

-- Toggle buttons - MODIFIED: Made slightly smaller for horizontal layout
local toggleMoneyButton = Instance.new("TextButton")
toggleMoneyButton.Size = UDim2.new(0, 30, 0, 30)
toggleMoneyButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleMoneyButton.BorderSizePixel = 0
toggleMoneyButton.Text = "M"
toggleMoneyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleMoneyButton.Font = Enum.Font.SourceSansBold
toggleMoneyButton.TextSize = 14
toggleMoneyButton.ZIndex = 16
toggleMoneyButton.Parent = controlFrame

local toggleUICorner1 = Instance.new("UICorner")
toggleUICorner1.CornerRadius = UDim.new(0, 6)
toggleUICorner1.Parent = toggleMoneyButton

local togglePlayerButton = Instance.new("TextButton")
togglePlayerButton.Size = UDim2.new(0, 30, 0, 30)
togglePlayerButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
togglePlayerButton.BorderSizePixel = 0
togglePlayerButton.Text = "P"
togglePlayerButton.TextColor3 = Color3.fromRGB(255, 255, 255)
togglePlayerButton.Font = Enum.Font.SourceSansBold
togglePlayerButton.TextSize = 14
togglePlayerButton.ZIndex = 16
togglePlayerButton.Parent = controlFrame

local toggleUICorner2 = Instance.new("UICorner")
toggleUICorner2.CornerRadius = UDim.new(0, 6)
toggleUICorner2.Parent = togglePlayerButton

local toggleTeleportButton = Instance.new("TextButton")
toggleTeleportButton.Size = UDim2.new(0, 30, 0, 30)
toggleTeleportButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleTeleportButton.BorderSizePixel = 0
toggleTeleportButton.Text = "T"
toggleTeleportButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleTeleportButton.Font = Enum.Font.SourceSansBold
toggleTeleportButton.TextSize = 14
toggleTeleportButton.ZIndex = 16
toggleTeleportButton.Parent = controlFrame

local toggleUICorner3 = Instance.new("UICorner")
toggleUICorner3.CornerRadius = UDim.new(0, 6)
toggleUICorner3.Parent = toggleTeleportButton

-- Toggle button functionality
toggleMoneyButton.MouseButton1Click:Connect(function()
    uiVisible.moneyCounter = not uiVisible.moneyCounter
    totalMoneyFrame.Visible = uiVisible.moneyCounter
    toggleMoneyButton.BackgroundColor3 = uiVisible.moneyCounter and Color3.fromRGB(60, 120, 60) or Color3.fromRGB(60, 60, 60)
end)

togglePlayerButton.MouseButton1Click:Connect(function()
    uiVisible.playerList = not uiVisible.playerList
    playerListFrame.Visible = uiVisible.playerList
    togglePlayerButton.BackgroundColor3 = uiVisible.playerList and Color3.fromRGB(60, 120, 60) or Color3.fromRGB(60, 60, 60)
end)

toggleTeleportButton.MouseButton1Click:Connect(function()
    uiVisible.teleportUI = not uiVisible.teleportUI
    teleportFrame.Visible = uiVisible.teleportUI
    toggleTeleportButton.BackgroundColor3 = uiVisible.teleportUI and Color3.fromRGB(60, 120, 60) or Color3.fromRGB(60, 60, 60)
end)

-- Initialize toggle button colors
toggleMoneyButton.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
togglePlayerButton.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
toggleTeleportButton.BackgroundColor3 = Color3.fromRGB(60, 120, 60)

-- Function to send chat command
local function sendChatCommand(command)
    -- Try to use the chat service first
    local chatService = game:GetService("ReplicatedStorage"):FindFirstChild("DefaultChatSystemChatEvents")
    if chatService then
        local sayMessageRequest = chatService:FindFirstChild("SayMessageRequest")
        if sayMessageRequest then
            sayMessageRequest:FireServer(command, "All")
            return true
        end
    end
    
    -- Fallback: Use text chat service for newer games
    local textChatService = game:GetService("TextChatService")
    if textChatService then
        local chatChannel = textChatService:FindFirstChild("TextChannels"):FindFirstChild("RBXGeneral")
        if chatChannel then
            chatChannel:SendAsync(command)
            return true
        end
    end
    
    -- Final fallback: Use legacy chat (makes your character say the command)
    local player = game.Players.LocalPlayer
    if player and player.Character then
        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid:Chat(command)
            return true
        end
    end
    
    return false
end

-- Create teleport buttons
local teleportCommands = {
    {name = "Autodrop", command = ".drop"},
    {name = "Unautodrop", command = ".stop"},
    {name = "Underground", command = ".underground"},
    {name = "Surface", command = ".surface"},
    {name = "Bank", command = ".setup bank"},
    {name = "Club", command = ".setup club"},
    {name = "Prison", command = ".setup prison"},
    {name = "Bathroom", command = ".setup bathroom"},
    {name = "Grave", command = ".setup grave"}
}

for _, cmd in ipairs(teleportCommands) do
    local buttonFrame = Instance.new("Frame")
    buttonFrame.Size = UDim2.new(1, -10, 0, 30)
    buttonFrame.BackgroundTransparency = 1
    buttonFrame.ZIndex = 12
    buttonFrame.Parent = teleportScroll
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 1, 0)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.BorderSizePixel = 0
    button.Text = cmd.name
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 14
    button.ZIndex = 13
    button.Parent = buttonFrame
    
    local buttonUICorner = Instance.new("UICorner")
    buttonUICorner.CornerRadius = UDim.new(0, 6)
    buttonUICorner.Parent = button
    
    button.MouseButton1Click:Connect(function()
        local success = sendChatCommand(cmd.command)
        if not success then
            warn("Failed to send chat command: " .. cmd.command)
        end
    end)
end

-- Update teleport scroll frame size
teleportLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    teleportScroll.CanvasSize = UDim2.new(0, 0, 0, teleportLayout.AbsoluteContentSize.Y)
end)

-- Tracked players and alert system
local trackedPlayers = {}
local alertFrame = nil
local alertSound = nil

-- Function to show alert
function showAlert(player, current, target)
    -- Close existing alert if any
    local existingAlert = ScreenGui:FindFirstChild("CashAlert")
    if existingAlert then
        existingAlert:Destroy()
    end
    
    -- Create alert sound
    if not alertSound then
        alertSound = Instance.new("Sound")
        alertSound.SoundId = "rbxassetid://9114266661" -- Warning sound
        alertSound.Volume = 0.5
        alertSound.Parent = ScreenGui
    end
    
    alertSound:Play()
    
    -- Create alert frame
    alertFrame = Instance.new("Frame")
    alertFrame.Name = "CashAlert"
    alertFrame.Size = UDim2.new(0, 400, 0, 200)
    alertFrame.Position = UDim2.new(0.5, -200, 0.5, -100)
    alertFrame.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
    alertFrame.BorderSizePixel = 0
    alertFrame.ZIndex = 1000
    alertFrame.Parent = ScreenGui
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = alertFrame
    
    local alertLabel = Instance.new("TextLabel")
    alertLabel.Size = UDim2.new(1, -40, 0, 100)
    alertLabel.Position = UDim2.new(0, 20, 0, 20)
    alertLabel.BackgroundTransparency = 1
    alertLabel.Text = player.DisplayName .. " has reached the target amount!\n\nCurrent: $" .. current .. "\nTarget: $" .. target
    alertLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    alertLabel.Font = Enum.Font.SourceSansBold
    alertLabel.TextSize = 20
    alertLabel.TextWrapped = true
    alertLabel.ZIndex = 1001
    alertLabel.Parent = alertFrame
    
    local okButton = Instance.new("TextButton")
    okButton.Size = UDim2.new(0, 120, 0, 40)
    okButton.Position = UDim2.new(0.5, -60, 1, -60)
    okButton.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
    okButton.BorderSizePixel = 0
    okButton.Text = "OK"
    okButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    okButton.Font = Enum.Font.SourceSansBold
    okButton.TextSize = 18
    okButton.ZIndex = 1001
    okButton.Parent = alertFrame
    
    local okUICorner = Instance.new("UICorner")
    okUICorner.CornerRadius = UDim.new(0, 8)
    okUICorner.Parent = okButton
    
    okButton.MouseButton1Click:Connect(function()
        alertFrame:Destroy()
        alertSound:Stop()
    end)
    
    -- Remove from tracked players
    trackedPlayers[player.UserId] = nil
end

-- Function to show player popup
function showPlayerPopup(player, currency)
    -- Close existing popup if any
    local existingPopup = ScreenGui:FindFirstChild("PlayerPopup")
    if existingPopup then
        existingPopup:Destroy()
    end

    local popup = Instance.new("Frame")
    popup.Name = "PlayerPopup"
    popup.Size = UDim2.new(0, 300, 0, 200)
    popup.Position = UDim2.new(0.5, -150, 0.5, -100)
    popup.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    popup.BorderSizePixel = 0
    popup.ZIndex = 100
    popup.Parent = ScreenGui

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = popup

    -- Make draggable
    local dragButton = Instance.new("TextButton")
    dragButton.Size = UDim2.new(1, 0, 0, 30)
    dragButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    dragButton.BorderSizePixel = 0
    dragButton.Text = player.DisplayName .. " - Track Cash"
    dragButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dragButton.Font = Enum.Font.SourceSansBold
    dragButton.TextSize = 18
    dragButton.ZIndex = 101
    dragButton.Parent = popup

    local dragUICorner = Instance.new("UICorner")
    dragUICorner.CornerRadius = UDim.new(0, 8)
    dragUICorner.Parent = dragButton

    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -30, 0, 0)
    closeButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
    closeButton.BorderSizePixel = 0
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = 18
    closeButton.ZIndex = 101
    closeButton.Parent = popup

    local closeUICorner = Instance.new("UICorner")
    closeUICorner.CornerRadius = UDim.new(0, 8)
    closeUICorner.Parent = closeButton

    closeButton.MouseButton1Click:Connect(function()
        popup:Destroy()
    end)

    -- Dragging functionality
    local dragging = false
    local dragInput, dragStart, startPos

    dragButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = popup.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    dragButton.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            popup.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                      startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- Current cash display
    local cashLabel = Instance.new("TextLabel")
    cashLabel.Size = UDim2.new(1, -20, 0, 30)
    cashLabel.Position = UDim2.new(0, 10, 0, 40)
    cashLabel.BackgroundTransparency = 1
    cashLabel.Text = "Current: $" .. tostring(currency.Value)
    cashLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    cashLabel.Font = Enum.Font.SourceSans
    cashLabel.TextSize = 18
    cashLabel.ZIndex = 101
    cashLabel.Parent = popup

    -- Target input
    local targetBox = Instance.new("TextBox")
    targetBox.Size = UDim2.new(1, -20, 0, 30)
    targetBox.Position = UDim2.new(0, 10, 0, 80)
    targetBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    targetBox.BorderSizePixel = 0
    targetBox.PlaceholderText = "Enter target amount"
    targetBox.Text = ""
    targetBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    targetBox.Font = Enum.Font.SourceSans
    targetBox.TextSize = 16
    targetBox.ZIndex = 101
    targetBox.Parent = popup

    local targetUICorner = Instance.new("UICorner")
    targetUICorner.CornerRadius = UDim.new(0, 6)
    targetUICorner.Parent = targetBox

    -- Track button
    local trackButton = Instance.new("TextButton")
    trackButton.Size = UDim2.new(1, -20, 0, 30)
    trackButton.Position = UDim2.new(0, 10, 0, 120)
    trackButton.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
    trackButton.BorderSizePixel = 0
    trackButton.Text = "Track Player"
    trackButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    trackButton.Font = Enum.Font.SourceSansBold
    trackButton.TextSize = 18
    trackButton.ZIndex = 101
    trackButton.Parent = popup

    local trackUICorner = Instance.new("UICorner")
    trackUICorner.CornerRadius = UDim.new(0, 6)
    trackUICorner.Parent = trackButton

    -- Status label
    local statusLabel = Instance.new("TextLabel")
    statusLabel.Size = UDim2.new(1, -20, 0, 20)
    statusLabel.Position = UDim2.new(0, 10, 0, 160)
    statusLabel.BackgroundTransparency = 1
    statusLabel.Text = ""
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.Font = Enum.Font.SourceSans
    statusLabel.TextSize = 14
    statusLabel.ZIndex = 101
    statusLabel.Parent = popup

    -- Update current cash when it changes
    currency:GetPropertyChangedSignal("Value"):Connect(function()
        cashLabel.Text = "Current: $" .. tostring(currency.Value)
    end)

    -- Track button functionality
    trackButton.MouseButton1Click:Connect(function()
        local target = tonumber(targetBox.Text)
        if target and target > 0 then
            trackedPlayers[player.UserId] = {
                player = player,
                target = target,
                currency = currency
            }
            statusLabel.Text = "Tracking when cash reaches $" .. target
            statusLabel.TextColor3 = Color3.fromRGB(120, 255, 120)
        else
            statusLabel.Text = "Please enter a valid amount"
            statusLabel.TextColor3 = Color3.fromRGB(255, 120, 120)
        end
    end)
end

-- Function to create player button
local function createPlayerButton(player)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 0, 40)
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.BorderSizePixel = 0
    button.AutoButtonColor = true
    button.Text = player.DisplayName .. " (Loading...)"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.SourceSans
    button.TextSize = 16
    button.TextXAlignment = Enum.TextXAlignment.Left
    button.ZIndex = 12
    button.Parent = scrollFrame
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 6)
    UICorner.Parent = button
    
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 10)
    padding.Parent = button
    
    -- Wait for player's data folder
    local dataFolder = nil
    local currency = nil
    
    spawn(function()
        if player ~= LocalPlayer then
            pcall(function()
                -- Try to find DataFolder in different possible locations
                local character = player.Character
                if character then
                    dataFolder = character:FindFirstChild("DataFolder")
                end
                
                if not dataFolder then
                    dataFolder = player:FindFirstChild("DataFolder")
                end
                
                if not dataFolder then
                    dataFolder = player:WaitForChild("DataFolder", 10)
                end
                
                if dataFolder then
                    currency = dataFolder:FindFirstChild("Currency") or dataFolder:WaitForChild("Currency", 5)
                end
            end)
        else
            -- Local player
            dataFolder = LocalPlayer:FindFirstChild("DataFolder")
            if dataFolder then
                currency = dataFolder:FindFirstChild("Currency")
            end
        end
        
        if currency then
            button.Text = player.DisplayName .. " ($" .. tostring(currency.Value) .. ")"
            
            -- Update cash display when value changes
            currency:GetPropertyChangedSignal("Value"):Connect(function()
                if button and button.Parent then
                    button.Text = player.DisplayName .. " ($" .. tostring(currency.Value) .. ")"
                    
                    -- Check if this player is being tracked for alerts
                    if trackedPlayers[player.UserId] then
                        local target = trackedPlayers[player.UserId].target
                        if currency.Value >= target then
                            -- Trigger alert
                            spawn(function()
                                showAlert(player, currency.Value, target)
                            end)
                        end
                    end
                end
            end)
        else
            button.Text = player.DisplayName .. " (No data)"
        end
    end)
    
    button.MouseButton1Click:Connect(function()
        if currency then
            showPlayerPopup(player, currency)
        else
            warn("No currency data for " .. player.Name)
        end
    end)
    
    -- Update scroll frame size
    listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y)
    end)
end

-- Function to calculate money on floor
local function calculateMoneyOnFloor()
    local total = 0
    
    -- Find the Drop folder
    local ignored = workspace:FindFirstChild("Ignored")
    if not ignored then return 0 end
    
    local dropFolder = ignored:FindFirstChild("Drop")
    if not dropFolder then return 0 end
    
    -- Loop through all drops
    for _, drop in ipairs(dropFolder:GetChildren()) do
        if drop:IsA("Part") or drop:IsA("MeshPart") then
            local billboard = drop:FindFirstChildOfClass("BillboardGui")
            if billboard then
                local textLabel = billboard:FindFirstChild("TextLabel")
                if textLabel and textLabel:IsA("TextLabel") then
                    local text = textLabel.Text
                    if string.sub(text, 1, 1) == "$" then
                        local amount = tonumber(string.sub(text, 2))
                        if amount then
                            total = total + amount
                        end
                    end
                end
            end
        end
    end
    
    return total
end

-- Update money on floor display
local function updateMoneyDisplay()
    local total = calculateMoneyOnFloor()
    moneyLabel.Text = "Money on floor: $" .. total
end

-- Set up money tracking
local function setupMoneyTracking()
    -- Initial update
    updateMoneyDisplay()
    
    -- Set up connections to update when drops change
    local ignored = workspace:FindFirstChild("Ignored")
    if ignored then
        local dropFolder = ignored:FindFirstChild("Drop")
        if dropFolder then
            dropFolder.ChildAdded:Connect(updateMoneyDisplay)
            dropFolder.ChildRemoved:Connect(updateMoneyDisplay)
        else
            -- Wait for Drop folder to be created
            local connection
            connection = ignored.ChildAdded:Connect(function(child)
                if child.Name == "Drop" then
                    connection:Disconnect()
                    child.ChildAdded:Connect(updateMoneyDisplay)
                    child.ChildRemoved:Connect(updateMoneyDisplay)
                    updateMoneyDisplay()
                end
            end)
        end
    else
        -- Wait for Ignored folder to be created
        local connection
        connection = workspace.ChildAdded:Connect(function()
            if workspace:FindFirstChild("Ignored") then
                connection:Disconnect()
                setupMoneyTracking()
            end
        end)
    end
end

-- Set up player list
local function setupPlayerList()
    -- Add existing players
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            createPlayerButton(player)
        end
    end
    
    -- Add local player at the top
    createPlayerButton(LocalPlayer)
    
    -- Handle new players
    Players.PlayerAdded:Connect(function(player)
        createPlayerButton(player)
    end)
    
    -- Handle players leaving
    Players.PlayerRemoving:Connect(function(player)
        -- Remove from tracked players
        trackedPlayers[player.UserId] = nil
        
        -- Remove their button
        for _, child in ipairs(scrollFrame:GetChildren()) do
            if child:IsA("TextButton") and string.find(child.Text, player.DisplayName) then
                child:Destroy()
                break
            end
        end
    end)
end

-- Initialize the script
setupMoneyTracking()
setupPlayerList()

-- Clean up when GUI is destroyed
ScreenGui.Destroying:Connect(function()
    for userId, data in pairs(trackedPlayers) do
        trackedPlayers[userId] = nil
    end
end)

warn("Money Tracker loaded successfully!")
