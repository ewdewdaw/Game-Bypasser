-- services
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Camera = workspace.CurrentCamera

-- variables
local targetPlayer = nil
local viewing = false
local zoomDistance = 10
local yaw, pitch = 0, 0
local lastMousePos = nil
local highlight = nil
local eTarget = nil

-- GUI setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 320, 0, 200)
Frame.Position = UDim2.new(1, -340, 1, -220) -- bottom-right start
Frame.BackgroundColor3 = Color3.fromRGB(40,40,40)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Visible = true
Frame.BackgroundTransparency = 1
Frame.Parent = ScreenGui

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0,15)
UICorner.Parent = Frame

TweenService:Create(Frame, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()

-- draggable
Frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		local startPos = input.Position
		local startFramePos = Frame.Position
		local connection
		connection = UserInputService.InputChanged:Connect(function(moveInput)
			if moveInput.UserInputType == Enum.UserInputType.MouseMovement then
				local delta = moveInput.Position - startPos
				Frame.Position = UDim2.new(startFramePos.X.Scale, startFramePos.X.Offset + delta.X, startFramePos.Y.Scale, startFramePos.Y.Offset + delta.Y)
			end
		end)
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				connection:Disconnect()
			end
		end)
	end
end)

-- toggle button (top-right)
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0,30,0,30)
ToggleButton.Position = UDim2.new(1, -40, 0, 10)
ToggleButton.Text = "â‰¡"
ToggleButton.BackgroundColor3 = Color3.fromRGB(0,120,200)
ToggleButton.TextColor3 = Color3.fromRGB(255,255,255)
ToggleButton.Parent = Frame
ToggleButton.AutoButtonColor = true
local toggleCorner = Instance.new("UICorner")
toggleCorner.CornerRadius = UDim.new(0,8)
toggleCorner.Parent = ToggleButton
ToggleButton.MouseEnter:Connect(function() ToggleButton.BackgroundColor3 = Color3.fromRGB(0,150,255) end)
ToggleButton.MouseLeave:Connect(function() ToggleButton.BackgroundColor3 = Color3.fromRGB(0,120,200) end)
ToggleButton.MouseButton1Click:Connect(function()
	Frame.Visible = not Frame.Visible
end)

-- textbox + suggestion box
local TextBox = Instance.new("TextBox")
TextBox.Size = UDim2.new(0,280,0,30)
TextBox.Position = UDim2.new(0,20,0,20)
TextBox.PlaceholderText = "Enter username/displayname"
TextBox.BackgroundColor3 = Color3.fromRGB(60,60,60)
TextBox.TextColor3 = Color3.fromRGB(255,255,255)
TextBox.ClearTextOnFocus = false
TextBox.Text = "" -- starts empty
TextBox.Parent = Frame
local tbCorner = Instance.new("UICorner")
tbCorner.CornerRadius = UDim.new(0,8)
tbCorner.Parent = TextBox

local SuggestionBox = Instance.new("ScrollingFrame")
SuggestionBox.Size = UDim2.new(0,280,0,60)
SuggestionBox.Position = UDim2.new(0,20,0,55)
SuggestionBox.BackgroundColor3 = Color3.fromRGB(50,50,50)
SuggestionBox.BorderSizePixel = 0
SuggestionBox.CanvasSize = UDim2.new(0,0,0,0)
SuggestionBox.Parent = Frame
local sbCorner = Instance.new("UICorner")
sbCorner.CornerRadius = UDim.new(0,8)
sbCorner.Parent = SuggestionBox

-- buttons
local function makeButton(name,pos,color)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0,120,0,30)
	btn.Position = pos
	btn.Text = name
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.Parent = Frame
	btn.AutoButtonColor = true
	local corner = Instance.new("UICorner")
	corner.CornerRadius = UDim.new(0,8)
	corner.Parent = btn
	btn.MouseEnter:Connect(function() btn.BackgroundColor3 = color:Lerp(Color3.fromRGB(100,100,255),0.5) end)
	btn.MouseLeave:Connect(function() btn.BackgroundColor3 = color end)
	return btn
end

local ViewBtn = makeButton("View", UDim2.new(0,20,0,130), Color3.fromRGB(0,120,200))
local TPBtn = makeButton("TP", UDim2.new(0,180,0,130), Color3.fromRGB(0,200,150))

-- autocomplete + highlight
local function findMatches(input)
	input = input:lower()
	local matches = {}
	for _, p in pairs(Players:GetPlayers()) do
		if p.Name:lower():find(input) or p.DisplayName:lower():find(input) then
			table.insert(matches,p)
		end
	end
	if #matches == 1 then
		targetPlayer = matches[1]
		if not highlight then
			highlight = Instance.new("Highlight")
			highlight.FillColor = Color3.fromRGB(0,255,0)
			highlight.OutlineColor = Color3.fromRGB(0,255,0)
			highlight.OutlineTransparency = 0
			highlight.FillTransparency = 0.6
			highlight.Adornee = targetPlayer.Character
			highlight.Parent = targetPlayer.Character
		else
			highlight.Adornee = targetPlayer.Character
		end
	end
	return matches
end

local function updateSuggestions()
	for _, c in pairs(SuggestionBox:GetChildren()) do
		if c:IsA("TextButton") then c:Destroy() end
	end
	local yOffset = 0
	local matches = findMatches(TextBox.Text)
	for _, p in pairs(matches) do
		local btn = Instance.new("TextButton")
		btn.Size = UDim2.new(1,0,0,20)
		btn.Position = UDim2.new(0,0,0,yOffset)
		btn.BackgroundColor3 = Color3.fromRGB(70,70,70)
		btn.TextColor3 = Color3.fromRGB(255,255,255)
		btn.Text = p.Name.." ("..p.DisplayName..")"
		btn.Parent = SuggestionBox
		btn.AutoButtonColor = true
		local bCorner = Instance.new("UICorner")
		bCorner.CornerRadius = UDim.new(0,5)
		bCorner.Parent = btn
		btn.MouseEnter:Connect(function() btn.BackgroundColor3 = Color3.fromRGB(100,100,150) end)
		btn.MouseLeave:Connect(function() btn.BackgroundColor3 = Color3.fromRGB(70,70,70) end)
		btn.MouseButton1Click:Connect(function()
			TextBox.Text = p.Name
			SuggestionBox.CanvasPosition = Vector2.new(0,0)
			targetPlayer = p
		end)
		yOffset = yOffset + 22
	end
	SuggestionBox.CanvasSize = UDim2.new(0,0,0,yOffset)
end

TextBox:GetPropertyChangedSignal("Text"):Connect(updateSuggestions)
Players.PlayerAdded:Connect(updateSuggestions)
Players.PlayerRemoving:Connect(updateSuggestions)

-- handle pressing Enter or losing focus
TextBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		local matches = findMatches(TextBox.Text)
		if #matches > 0 then
			targetPlayer = matches[1]
		end
	end
	TextBox.Text = ""
	SuggestionBox.CanvasPosition = Vector2.new(0,0)
end)

-- camera controls
UserInputService.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		lastMousePos = UserInputService:GetMouseLocation()
	end
end)
UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		lastMousePos = nil
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement and lastMousePos then
		local delta = input.Position - lastMousePos
		yaw = yaw - delta.X * 0.002
		pitch = math.clamp(pitch - delta.Y * 0.002, -math.pi/2, math.pi/2)
		lastMousePos = input.Position
	elseif input.UserInputType == Enum.UserInputType.MouseWheel then
		zoomDistance = math.clamp(zoomDistance - input.Position.Z*2,5,50)
	end
end)

-- tracer
local tracer = Drawing.new("Line")
tracer.Visible = false
tracer.Color = Color3.fromRGB(0,255,0)
tracer.Thickness = 2
tracer.Transparency = 1

-- RunService loop
RunService:BindToRenderStep("SpectateCamera", Enum.RenderPriority.Camera.Value, function()
	-- camera follow
	if viewing and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = targetPlayer.Character.HumanoidRootPart
		Camera.CFrame = CFrame.new(hrp.Position) * CFrame.Angles(pitch, yaw, 0) * CFrame.new(0,0,zoomDistance)
	end

	-- tracer & highlight always active if eTarget exists
	if eTarget and eTarget.Character and eTarget.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = eTarget.Character.HumanoidRootPart
		local mousePos = UserInputService:GetMouseLocation()
		local targetPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)

		-- only show tracer if in front of camera
		if targetPos.Z > 0 then
			tracer.From = Vector2.new(mousePos.X, mousePos.Y)
			tracer.To = Vector2.new(targetPos.X, targetPos.Y)
			tracer.Visible = true
		else
			tracer.Visible = false
		end

		-- highlight always active
		if highlight then
			highlight.Adornee = eTarget.Character
		else
			highlight = Instance.new("Highlight")
			highlight.FillColor = Color3.fromRGB(0,255,0)
			highlight.OutlineColor = Color3.fromRGB(0,255,0)
			highlight.OutlineTransparency = 0
			highlight.FillTransparency = 0.6
			highlight.Adornee = eTarget.Character
			highlight.Parent = eTarget.Character
		end
	else
		tracer.Visible = false
	end
end)

-- buttons
ViewBtn.MouseButton1Click:Connect(function()
	if targetPlayer then
		viewing = not viewing
		Camera.CameraType = viewing and Enum.CameraType.Scriptable or Enum.CameraType.Custom
	end
end)

TPBtn.MouseButton1Click:Connect(function()
	if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		LocalPlayer.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,5,0)
	end
end)

-- press E -> toggle selection instantly
UserInputService.InputBegan:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.E then
		if eTarget then
			-- unselect immediately
			eTarget = nil
			tracer.Visible = false
			targetPlayer = nil
			TextBox.Text = ""
			if highlight then
				highlight.Adornee = nil
				highlight:Destroy()
				highlight = nil
			end
		else
			-- select nearest player to mouse
			local closestPlayer = nil
			local shortestDist = math.huge
			local mousePos = UserInputService:GetMouseLocation()
			for _, p in pairs(Players:GetPlayers()) do
				if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
					local screenPos, onScreen = Camera:WorldToViewportPoint(p.Character.HumanoidRootPart.Position)
					if onScreen then
						local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(mousePos.X, mousePos.Y)).Magnitude
						if dist < shortestDist then
							shortestDist = dist
							closestPlayer = p
						end
					end
				end
			end
			if closestPlayer then
				eTarget = closestPlayer
				targetPlayer = closestPlayer
				TextBox.Text = targetPlayer.Name
				if highlight then
					highlight.Adornee = targetPlayer.Character
				else
					highlight = Instance.new("Highlight")
					highlight.FillColor = Color3.fromRGB(0,255,0)
					highlight.OutlineColor = Color3.fromRGB(0,255,0)
					highlight.OutlineTransparency = 0
					highlight.FillTransparency = 0.6
					highlight.Adornee = targetPlayer.Character
					highlight.Parent = targetPlayer.Character
				end
			end
		end
	end
end)

-- toggle GUI visibility with ]
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.KeyCode == Enum.KeyCode.RightBracket then
		Frame.Visible = not Frame.Visible
	end
end)
